#!/usr/bin/env python3
"""
–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã ‚Ññ3 - –í–∞—Ä–∏–∞–Ω—Ç 5
–ë—Ä—É—Ç—Ñ–æ—Ä—Å —Å WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
"""

import requests
import time
import json

def demo():
    """–ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞"""
    
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –õ–ê–ë–û–†–ê–¢–û–†–ù–û–ô –†–ê–ë–û–¢–´ ‚Ññ3")
    print("üìã –í–∞—Ä–∏–∞–Ω—Ç 5: –ë—Ä—É—Ç—Ñ–æ—Ä—Å —Å WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏")
    print("=" * 50)
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ API
        print("\n1. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ REST API...")
        response = requests.get("http://localhost:8000/api/bruteforce/demo-hash/demo")
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç! –•–µ—à: {data['hash']}")
            target_hash = data['hash']
        else:
            print("   ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python main.py")
            return
        
        # 2. –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏
        print("\n2. ‚ö° –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –±—Ä—É—Ç—Ñ–æ—Ä—Å–∞...")
        task_data = {
            "hash_type": "md5",
            "target_hash": target_hash,
            "max_length": 4
        }
        
        response = requests.post("http://localhost:8000/api/bruteforce/start", json=task_data)
        if response.status_code == 200:
            result = response.json()
            task_id = result['task_id']
            print(f"   ‚úÖ –ó–∞–¥–∞—á–∞ –∑–∞–ø—É—â–µ–Ω–∞: {task_id[:8]}...")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return
        
        # 3. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        print("\n3. üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...")
        for i in range(15):
            response = requests.get(f"http://localhost:8000/api/bruteforce/task/{task_id}")
            if response.status_code == 200:
                task = response.json()
                status = task['status']
                progress = task['progress']
                result = task.get('result', 'N/A')
                
                print(f"   üìà {status} ({progress}%) -> {result}")
                
                if status == 'COMPLETED':
                    print(f"   üéØ –ü–ê–†–û–õ–¨ –ù–ê–ô–î–ï–ù: '{result}'")
                    break
                elif status == 'FAILED':
                    print(f"   ‚ùå –û–®–ò–ë–ö–ê: {result}")
                    break
            
            time.sleep(1)
        
        # 4. WebSocket —Ç–µ—Å—Ç
        print("\n4. üîå –¢–µ—Å—Ç WebSocket...")
        try:
            import websocket
            ws = websocket.create_connection(f"ws://localhost:8000/ws/test")
            ws.send("ping")
            response = ws.recv()
            ws.close()
            print(f"   ‚úÖ WebSocket —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç: {response[:50]}...")
        except Exception as e:
            print(f"   ‚ö†Ô∏è WebSocket: {str(e)[:50]}...")
        
        # 5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\n5. üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞...")
        response = requests.get("http://localhost:8000/api/bruteforce/tasks")
        if response.status_code == 200:
            tasks = response.json()
            total = len(tasks)
            completed = len([t for t in tasks if t['status'] == 'COMPLETED'])
            print(f"   üì¶ –í—Å–µ–≥–æ –∑–∞–¥–∞—á –≤ —Å–∏—Å—Ç–µ–º–µ: {total}")
            print(f"   ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ: {completed}")
        
        print("\n" + "=" * 50)
        print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("‚úÖ REST API - —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –ë—Ä—É—Ç—Ñ–æ—Ä—Å - –Ω–∞—Ö–æ–¥–∏—Ç –ø–∞—Ä–æ–ª–∏")
        print("‚úÖ WebSocket - –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è")
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ")
        print("‚úÖ TaskManager - —É–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞—á–∞–º–∏")
        print("=" * 50)
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python main.py")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        import requests
        import websocket
    except ImportError as e:
        print(f"‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install requests websocket-client")
        exit(1)
    
    demo() 